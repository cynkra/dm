% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dm.R
\name{dm}
\alias{dm}
\alias{dm_from_src}
\alias{new_dm}
\alias{validate_dm}
\alias{cdm_get_src}
\alias{cdm_get_con}
\alias{cdm_get_tables}
\alias{cdm_get_filter}
\alias{is_dm}
\alias{as_dm}
\title{Data model class}
\usage{
dm(..., .name_repair = c("check_unique", "unique", "universal", "minimal"))

dm_from_src(src, table_names = NULL)

new_dm(tables = list())

validate_dm(x)

cdm_get_src(x)

cdm_get_con(x)

cdm_get_tables(x)

cdm_get_filter(x)

is_dm(x)

as_dm(x)
}
\arguments{
\item{...}{Tables to add to the \code{dm}.  If no names are provided, the tables
are auto-named.}

\item{.name_repair}{Options for name repair.
Forwarded as \code{repair} to \code{\link[vctrs:vec_as_names]{vctrs::vec_as_names()}}.}

\item{src}{A \pkg{dplyr} table source object.}

\item{table_names}{A character vector of the names of the tables to include.}

\item{tables}{A named list of the tables (tibble-objects, not names)
to be included in the \code{dm} object.}

\item{x}{An object.}
}
\description{
The \code{dm} class holds a list of tables and their relationships.
It is inspired by \href{https://github.com/bergant/datamodelr}{datamodelr},
and extends the idea by offering operations to access the data in the tables.

\code{dm()} creates a \code{dm} object from one or multiple \link{tbl} objects
(tibbles or lazy data objects).

\code{dm_from_src()} creates a \code{dm} from some or all tables in a \link{src}
(a database or an environment).

\code{new_dm()} doesn't perform any checks on the input.
You may need to double-check the returned object with \code{validate_dm()}.

All constructors create an empty \code{dm} if called without arguments.

\code{validate_dm()} checks the internal consistency of a \code{dm} object.

\code{cdm_get_src()} returns the \pkg{dplyr} source component of a \code{dm}
object.

\code{cdm_get_con()} returns the connection object (\code{con}-part of \pkg{dplyr} source component) of a \code{dm}
object.

\code{cdm_get_tables()} returns a named list with \pkg{dplyr} \link{tbl} objects
of a \code{dm} object.
The filter expressions are NOT evaluated at this stage.
To get the filtered tables, use \code{tbl.dm()}

\code{cdm_get_filter()} returns the filter component of a \code{dm}
object, the set filter expressions.

\code{is_dm()} returns \code{TRUE} if the input is of class \code{dm}.

\code{as_dm()} coerces objects to the \code{dm} class
}
\examples{
library(dplyr)
dm(iris, mtcars)
dm_from_src(dplyr::src_df(pkg = "nycflights13"))
new_dm(list(iris = iris, mtcars = mtcars))
as_dm(list(iris = iris, mtcars = mtcars))

cdm_nycflights13() \%>\% tbl("airports")
cdm_nycflights13() \%>\% src_tbls()
cdm_nycflights13() \%>\% cdm_get_src()
cdm_nycflights13() \%>\% cdm_get_tables()

cdm_nycflights13() \%>\%
  cdm_rename_tbl(ap = airports)
cdm_nycflights13() \%>\%
  cdm_rename_tbl(ap = airports, fl = flights)
}
\seealso{
\itemize{
\item \code{\link[=cdm_add_pk]{cdm_add_pk()}} and \code{\link[=cdm_add_fk]{cdm_add_fk()}} add primary and foreign keys
\item \code{\link[=cdm_copy_to]{cdm_copy_to()}} and \code{\link[=cdm_learn_from_db]{cdm_learn_from_db()}} for DB interaction
\item \code{\link[=cdm_draw]{cdm_draw()}} for visualization
\item \code{\link[=cdm_join_to_tbl]{cdm_join_to_tbl()}} for flattening
\item \code{\link[=cdm_filter]{cdm_filter()}} for filtering
\item \code{\link[=cdm_select_tbl]{cdm_select_tbl()}} for creating a \code{dm} with only a subset of the tables
\item \code{\link[=decompose_table]{decompose_table()}} as one example of the table surgery family
\item \code{\link[=check_key]{check_key()}} and \code{\link[=check_if_subset]{check_if_subset()}} for checking for key properties
\item \code{\link[=check_cardinality]{check_cardinality()}} for checking the cardinality of the relation between two tables
\item \code{\link[=cdm_nycflights13]{cdm_nycflights13()}}  for creating an example \code{dm} object
}
}
